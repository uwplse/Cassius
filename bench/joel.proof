;; -*- mode: scheme -*-

(page joel1 (load "joel.rkt" doc-2)
      :w (between 800 1920)
      :h (between 600 1280)
      :fs (between 16 32))
(page joel2 (load "joel.rkt" doc-3)
      :w (between 800 1920)
      :h (between 600 1280)
      :fs (between 16 32))
(page other (load "joel.rkt" doc-1)
      :w (between 800 1920)
      :h (between 600 1280)
      :fs (between 16 32))

(define (is-interactive b)
  (matches b (tag a)))

(define (onscreen b)
  (and (>= (top b) 0) (>= (left b) 0)))

(define (onscreen-plus b delta)
  (and (>= (top b) delta) (>= (left b) 0)))

(theorem (interactive-onscreen b)
  (=> (is-interactive b) (onscreen b)))

(proof (interactive-onscreen interactive-onscreen joel1 joel2 other)
  (component sidebar (id masthead))
  (component sidebar-content (id tabs))
  (component sidebar-title (class site-title))
  (component sidebar-description (class site-description))
  (components (id front-widgets))
  (component content (id content))
  (component heading (desc (id main) (tag header)))
  (component linkbar (class entry-meta))
  (component articletext (class entry-content))
  (components (id post-footer-widgets))
  (components (class author-info))
  (component nav (class post-navigation))
  (component colophon (id colophon))
  (components (child (class entry-content) *))

  (components (id site-navigation))
  (components (desc (id site-navigation) (tag li)))

  (components (id comments))
  (components (desc (id comments) (tag li)))
  (components (id respond))

  ;; I call this the "proof strategy"; if this were true, it would prove the theorem
  (assert
   (- * (or sidebar sidebar-title))
   (forall (b) (=> (onscreen ?)
                   (=> (or (is-component b) (is-interactive b)) (onscreen b)))))

  (assert root (onscreen root))

  (assert sidebar (forall (_) (=> (onscreen sidebar) (onscreen-plus sidebar-content 5))))
  (admit sidebar (forall (b) (=> (onscreen sidebar) (or (is-component b) (is-interactive b)) (onscreen b))))

  (assert sidebar-title (non-negative-margins sidebar-title))
  (assert sidebar-title (> (height sidebar-title) 0))

  (assert sidebar-description (non-negative-margins sidebar-description))

  (assert sidebar-content
          (forall (_)
                  (=> (onscreen-plus sidebar-content 5)
                      (onscreen-plus sidebar-title 5))))

  (assert sidebar-title
    (forall (b)
            (=> (onscreen-plus sidebar-title 5)
                (is-interactive b) (onscreen b)))))

;; The same as above, but without breaking out the comments

(proof (no-comment-proof interactive-onscreen other)
  (component sidebar (id masthead))
  (component sidebar-content (id tabs))
  (component sidebar-title (class site-title))
  (component sidebar-description (class site-description))
  (components (id front-widgets))
  (component content (id content))
  (component heading (desc (id main) (tag header)))
  (component linkbar (class entry-meta))
  (component articletext (class entry-content))
  (components (id post-footer-widgets))
  (components (class author-info))
  (component nav (class post-navigation))
  (component colophon (id colophon))
  (components (child (class entry-content) *))

  (components (id site-navigation))
  (components (desc (id site-navigation) (tag li)))

  (assert
   (- * (or sidebar sidebar-title))
   (forall (b) (=> (onscreen ?)
                   (=> (or (is-component b) (is-interactive b)) (onscreen b)))))

  (assert root (onscreen root))

  (admit sidebar (forall (_) (=> (onscreen sidebar) (onscreen-plus sidebar-content 5))))
  (admit sidebar (forall (b) (=> (onscreen sidebar) (or (is-component b) (is-interactive b)) (onscreen b))))

  (assert sidebar-title (non-negative-margins sidebar-title))
  (assert sidebar-title (> (height sidebar-title) 0))

  (assert sidebar-description (non-negative-margins sidebar-description))

  (assert sidebar-content
          (forall (_)
                  (=> (onscreen-plus sidebar-content 5)
                      (onscreen-plus sidebar-title 5))))

  (assert sidebar-title
    (forall (b)
            (=> (onscreen-plus sidebar-title 5)
                (is-interactive b) (onscreen b)))))

(define (viewable b)
  (and (> (right b) 0) (> (bottom b) 0)))

(define (line b)
  (ancestor b (has-type ? line)))

(define (width-line b)
  (- (right (last b)) (left (first b))))

(theorem (line-width b)
  (=> (has-type b text) (has-contents b) (viewable b)
      (!= (first (line b)) null)
      (<= (width-line (line b)) (* 80 (/ 10 19) (height b)))))

(proof (line-width line-width joel1 joel2 other)
  (component sidebar (id masthead))
  (component sidebar-content (id tabs))
  (component sidebar-title (class site-title))
  (component sidebar-description (class site-description))
  (components (id front-widgets))
  (component content (id content))
  (component heading (desc (id main) (tag header)))
  (component linkbar (class entry-meta))
  (component articletext (class entry-content))
  (components (id post-footer-widgets))
  (components (class author-info))
  (component nav (class post-navigation))
  (component colophon (id colophon))
  (components (child (class entry-content) *))

  (components (id site-navigation))
  (components (desc (id site-navigation) (tag li)))

  (components (id comments))
  (components (desc (id comments) (tag li)))
  (components (id respond))

  (assert * (forall (b) (=> (has-type b text) (has-contents b)
                            (!= (first (line b)) null)
                            (not (matches ? (id post-footer-widgets)))
                            (<= (width-line (line b)) (* 80 (/ 10 19) (height b))))))

  (admit * (forall (b) (=> (matches ? (id post-footer-widgets))
                           (has-type b text) (has-contents b)
                           (!= (first (line b)) null)
                           (<= (width-line (line b)) (* 80 (/ 10 19) (height b)))))))
